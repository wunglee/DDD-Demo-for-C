#include "gtest/gtest.h"
#include "转账流程测试环境.h"
#include "../公共测试方法.h"


TEST_F(转账流程测试环境, 创建用户以后创建资金帐户){
    boost::optional<资金帐户> 资金帐户1=资金帐户服务工厂::获取单例()->获取资金帐户("XX");
    boost::optional<资金帐户> 资金帐户2=资金帐户服务工厂::获取单例()->获取资金帐户("YY");
    ASSERT_EQ(资金帐户1.has_value(),true);
    ASSERT_EQ(资金帐户2.has_value(),true);
    ASSERT_EQ(资金帐户1.value().获取账号(),"XX");
    ASSERT_EQ(资金帐户2.value().获取账号(),"YY");
}
void 设置禁止收付款(bool 禁止付款, bool 禁止收款){
    if (禁止付款) {
        资金帐户服务工厂::获取单例()->设置禁止付款("XX",true);
    }
    if (禁止收款) {
        资金帐户服务工厂::获取单例()->设置禁止收款("YY",true);
    }
}
int 创建转账(float 付款帐户资金,float 付款金额) {
    资金帐户服务工厂::获取单例()->初始化资金("XX", 付款帐户资金);
    return 转账服务::获取单例()->申请转账("XX", "YY", 付款金额);
}
TEST_F(转账流程测试环境, 转账创建成功){
    检查转账状态(创建转账(1000,100),转账::已创建);
}

TEST_F(转账流程测试环境, 禁止付款){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已失败", "转账事件处理器");
    设置禁止收付款(true, false);
    检查转账状态(创建转账(1000,100),转账::已取消);
}
TEST_F(转账流程测试环境, 余额不足){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已失败", "转账事件处理器");
    检查转账状态(创建转账(100,1000),转账::已取消);
}
TEST_F(转账流程测试环境, 转账出账成功){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已成功", "转账事件处理器");
    检查转账状态(创建转账(1000,100),转账::已出账);
}
TEST_F(转账流程测试环境,禁止收款){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已成功", "转账事件处理器");
    事件发布订阅服务::构建单例()->订阅("转账已出账", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("增资已失败", "转账事件处理器");
    设置禁止收付款(false, true);
    检查转账状态(创建转账(1000,100),转账::退款中);
}

TEST_F(转账流程测试环境, 正常收款){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已成功", "转账事件处理器");
    事件发布订阅服务::构建单例()->订阅("转账已出账", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("增资已成功", "转账事件处理器");
    检查转账状态(创建转账(1000,100),转账::已到账);
}
TEST_F(转账流程测试环境, 正常退款){
    事件发布订阅服务::构建单例()->订阅("转账已创建", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("扣减已成功", "转账事件处理器");
    事件发布订阅服务::构建单例()->订阅("转账已出账", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("增资已失败", "转账事件处理器");
    事件发布订阅服务::构建单例()->订阅("转账退款中", "资金事件处理器");
    事件发布订阅服务::构建单例()->订阅("增资已成功", "转账事件处理器");
    设置禁止收付款(false, true);
    检查转账状态(创建转账(1000,100),转账::已退回);
}