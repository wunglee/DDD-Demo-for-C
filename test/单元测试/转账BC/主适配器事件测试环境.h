#ifndef TRANSFER_主适配器事件测试环境_H
#define TRANSFER_主适配器事件测试环境_H
#include "gtest/gtest.h"
#include "../../../src/转账BC/主适配器/转账事件处理器.h"
#include "../../../src/全局配置/服务接口/转账服务接口.h"
#include "../../../src/框架组件/命名服务/命名服务管理器.h"
#include "../../../src/框架组件/事件发布订阅/事件监听器.h"
#include "转账服务模拟.h"

class 主适配器事件测试环境 : public ::testing::Test {
public:
    virtual void SetUp() {
        命名服务管理器::获取单例()->注册服务("转账服务", (转账服务接口 *) 转账服务模拟::获取单例());
        命名服务管理器::获取单例()->注册服务("转账事件处理器", (事件监听器 *) 转账事件处理器::构建单例(转账服务模拟::获取单例()));
        事件发布订阅服务::构建单例()->订阅("增资已成功", "转账事件处理器");
        事件发布订阅服务::构建单例()->订阅("增资已失败", "转账事件处理器");
        事件发布订阅服务::构建单例()->订阅("扣减已成功", "转账事件处理器");
        事件发布订阅服务::构建单例()->订阅("扣减已失败", "转账事件处理器");
    }
    virtual void TearDown() {
        delete 命名服务管理器::获取单例()->注销服务<事件监听器 *>("转账事件处理器").value();
        delete 命名服务管理器::获取单例()->注销服务<转账服务接口 *>("转账服务").value();
        命名服务管理器::销毁单例();
        事件发布订阅服务::销毁单例();
    }
};
#endif //TRANSFER_主适配器事件测试环境_H
