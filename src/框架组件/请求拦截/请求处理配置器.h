//
// Created by 王立 on 2021/5/24.
//

#ifndef DDD_DEMO_FOR_C_请求处理配置器_H
#define DDD_DEMO_FOR_C_请求处理配置器_H
#include "../命名服务/命名服务管理器.h"
#include "请求处理器.h"
#include "请求队列池.h"
class 请求处理配置器 {
    请求处理配置器(){
        命名服务管理器::获取单例()->注册服务<请求队列池接口 *>("请求队列池", 请求队列池::构建单例());
        命名服务管理器::获取单例()->注册服务<请求处理器管理器 *>("请求处理器管理器",请求处理器管理器::获取单例());
        命名服务管理器::获取单例()->注册服务<请求接收器 *>("请求接收器", 请求接收器::获取单例());
    }
    static 请求处理配置器* 请求处理管理器_;
public:
    ~请求处理配置器(){
        请求队列池::销毁单例();
        请求处理器管理器::销毁单例();
        请求接收器::销毁单例();
        请求处理配置器* 请求处理管理器_= nullptr;
    }
    static 请求处理配置器* 构建单例(){
        if(请求处理管理器_== nullptr){
            请求处理管理器_=new 请求处理配置器();
        }
        return 请求处理管理器_;
    }
    static 请求处理配置器* 获取单例(){
        return 构建单例();
    }
    static void 销毁单例(){
        delete 请求处理配置器::请求处理管理器_;
    }
    void 注册请求处理器(std::string 名称,请求处理器 *请求处理器){
        请求处理器管理器::获取单例()->注册请求处理器(名称,请求处理器);
    }
    void 注销请求处理器(std::string 名称){
        请求处理器管理器::获取单例()->注销请求处理器(名称);
    }
};


#endif //DDD_DEMO_FOR_C_请求处理配置器_H
